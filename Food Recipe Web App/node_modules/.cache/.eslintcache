[{"D:\\My Projects\\Web Development\\myapp\\src\\index.js":"1","D:\\My Projects\\Web Development\\myapp\\src\\App.js":"2","D:\\My Projects\\Web Development\\myapp\\src\\reportWebVitals.js":"3","D:\\My Projects\\Web Development\\myapp\\src\\recipe.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":1412,"mtime":1612972522280,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":365,"mtime":1612973031741,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"t16ywd",{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"12"},"D:\\My Projects\\Web Development\\myapp\\src\\index.js",[],["21","22"],"D:\\My Projects\\Web Development\\myapp\\src\\App.js",["23","24"],"import React, { useEffect, useState } from \"react\";\nimport Recipe from './recipe.js';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst App = () => {\n  const APP_ID = \"1c95b4f4\";\n  const APP_KEY = \"3286368efb8fca0799cf01f60d75973f\";\n  \n  const [recipies, setRecipies] = useState([]);\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('');\n  \n  useEffect(() => {\n    getRecipies();  \n  }, [query]);\n  \n  const getRecipies = async () => {\n    const response = await fetch(\n\t    `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\n\t  );\n\tconst data = await response.json();\n\tsetRecipies(data.hits);\n  };\n  \n  const updateSearch = e => {\n    setSearch(e.target.value);\n  };\n  \n  const getSearch = e => {\n    e.preventDefault();\n\tsetQuery(search);\n  };\n  \n  return (\n    <div className = \"App\">\n\t<h2>Food Vegas</h2>\n\t<form className = \"search-form\" onSubmit = { getSearch }>\n\t<input className = \"search-bar\" type = \"text\" value = { search } onChange = { updateSearch }></input>\n\t<button className = \"search-button\" type = \"submit\">Search</button>\n\t</form>\n\t<div className = \"recipes\">\n\t{recipies.map(recipe => (\n\t    <Recipe key = { recipe.recipe.label }\n\t\t        title = { recipe.recipe.label }\n\t\t        image = { recipe.recipe.image }\n\t\t\t\tingredients = { recipe.recipe.ingredients }>\n\t\t</Recipe>\t\t\n\t))}\n\t</div>\n\t</div>\n  );\n};\n\nexport default App;","D:\\My Projects\\Web Development\\myapp\\src\\reportWebVitals.js",[],"D:\\My Projects\\Web Development\\myapp\\src\\recipe.js",["25"],"import React from 'react';\r\nimport styles from \"./recipe.module.css\";\r\n\r\nconst Recipe = ({title, image, ingredients}) => {\r\n   return (\r\n      <div className = { styles.recipe }>\r\n\t  <h2>{ title }</h2>\r\n\t  <img src = { image }/>\r\n\t  <ul>{ ingredients.map(ingredient => (\r\n\t    <li>{ ingredient.text }</li>\r\n\t  ))}</ul>\r\n\t  </div>\r\n\t); \r\n};\r\n\r\nexport default Recipe;",{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":3,"column":8,"nodeType":"32","messageId":"33","endLine":3,"endColumn":12},{"ruleId":"34","severity":1,"message":"35","line":16,"column":6,"nodeType":"36","endLine":16,"endColumn":13,"suggestions":"37"},{"ruleId":"38","severity":1,"message":"39","line":8,"column":4,"nodeType":"40","endLine":8,"endColumn":26},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getRecipies'. Either include it or remove the dependency array.","ArrayExpression",["43"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"44","fix":"45"},"Update the dependencies array to be: [getRecipies, query]",{"range":"46","text":"47"},[427,434],"[getRecipies, query]"]